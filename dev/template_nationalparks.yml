apiVersion: v1
kind: Template
metadata:
  name: nationalparks
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    lookupPolicy:
      local: false  
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${APP_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
      spec:
        containers:
        - env:
          - name: DB_USERNAME
            valueFrom:
              configMapKeyRef:
                key: database-user
                name: mongodb-configmap
          - name: DB_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: database-password
                name: mongodb-configmap
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                key: database-name
                name: mongodb-configmap
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                key: database-host
                name: mongodb-configmap
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                key: database-port
                name: mongodb-configmap
          image: docker-registry.default.svc:5000/mitzicom-poc-dev/nationalparks:latest
          imagePullPolicy: Always
          name: ${APP_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
    test: false
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    ports:
    - name: "8080"
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APP_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APP_NAME}
      type: parksmap-backend
    name: nationalparks
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100
    wildcardPolicy: None
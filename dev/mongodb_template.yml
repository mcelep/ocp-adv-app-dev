apiVersion: v1
kind: Template
metadata:
  name: mongodb
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: mongodb
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${MONGODB_VOLUME_CAPACITY}
- apiVersion: v1
  data:
    database-admin-password: password
    database-name: maps
    database-password: password
    database-user: user
    database-host: mongodb
    database-port: "27017"
    database-rs: rs0
  kind: ConfigMap
  metadata:
    labels:
      app: mongodb
      template: mongodb-persistent-template
    name: mongodb-configmap
  type: Opaque
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    generation: 1
    labels:
      app: mongodb
      template: mongodb-persistent-template
    name: mongodb
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: mongodb
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: mongodb
          name: mongodb
      spec:
        containers:
        - env:
          - name: MONGODB_USER
            valueFrom:
              configMapKeyRef:
                key: database-user
                name: mongodb-configmap
          - name: MONGODB_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: database-password
                name: mongodb-configmap
          - name: MONGODB_ADMIN_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: database-admin-password
                name: mongodb-configmap
          - name: MONGODB_DATABASE
            valueFrom:
              configMapKeyRef:
                key: database-name
                name: mongodb-configmap
          image: registry.access.redhat.com/rhscl/mongodb-32-rhel7@sha256:2c44d3b3ac7945d58d92f4c53adf32942256883b75799a617da550a602a2e948
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          name: mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="quit()"
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: mongodb-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: mongodb
    name: mongodb
  spec:
    ports:
    - name: "27017"
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      app: mongodb
    sessionAffinity: None
    type: ClusterIP
parameters:
  - description: Volume space available for MongoDB, e.g. 512Mi, 2Gi.
    displayName: Volume Capacity
    name: MONGODB_VOLUME_CAPACITY
    required: true
    value: 5Gi
apiVersion: v1
kind: Template
metadata:
  name: gogs
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: gogs-postgresql-secrets
  stringData:
    database-name: ${POSTGRESQL_DATABASE} 
    database-user: ${POSTGRESQL_USERNAME} 
    database-password: ${POSTGRESQL_PASSWORD} 
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: gogs
    name: gogs
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: gogs
      deploymentconfig: gogs
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: gogs
          deploymentconfig: gogs
      spec:
        containers:
        - image: wkulhanek/gogs
          imagePullPolicy: IfNotPresent
          name: gogs
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: gogs-data
          - mountPath: /opt/gogs/custom/conf
            name: gogs-config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gogs-data
          persistentVolumeClaim:
            claimName: gogs
        - name: gogs-config
          configMap:
            defaultMode: 420
            name: gogs-cm
- apiVersion: v1
  kind: ConfigMap
  data:
    app.ini: |-
      APP_NAME = Gogs
      RUN_USER = gogs
      RUN_MODE = prod

      [database]
      DB_TYPE  = postgres
      HOST     = gogs-postgresql
      NAME     = ${POSTGRESQL_DATABASE}
      USER     = ${POSTGRESQL_USERNAME}
      PASSWD   = ${POSTGRESQL_PASSWORD}
      SSL_MODE = disable
      PATH     = data/gogs.db

      [repository]
      ROOT = /data/gogs-repositories

      [server]
      DOMAIN           = localhost
      HTTP_PORT        = 3000
      ROOT_URL         = http://localhost:3000/
      DISABLE_SSH      = false
      SSH_PORT         = 22
      START_SSH_SERVER = false
      OFFLINE_MODE     = false

      [mailer]
      ENABLED = false

      [service]
      REGISTER_EMAIL_CONFIRM = false
      ENABLE_NOTIFY_MAIL     = false
      DISABLE_REGISTRATION   = false
      ENABLE_CAPTCHA         = true
      REQUIRE_SIGNIN_VIEW    = false

      [picture]
      DISABLE_GRAVATAR        = false
      ENABLE_FEDERATED_AVATAR = true

      [session]
      PROVIDER = file

      [log]
      MODE      = file
      LEVEL     = Info
      ROOT_PATH = /opt/gogs/log

      [security]
      INSTALL_LOCK = true
      SECRET_KEY   = uxsI3UVYg9mc5it
  metadata:
    name: gogs-cm
              
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.alpha.openshift.io/wait-for-ready: "true"
    creationTimestamp: null
    generation: 1
    labels:
      app: gogs
      template: postgresql-persistent-template
    name: gogs-postgresql
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: gogs-postgresql
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: gogs
          name: gogs-postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: gogs-postgresql-secrets
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: gogs-postgresql-secrets
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: gogs-postgresql-secrets
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: gogs-postgresql
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: gogs-postgresql
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${POSTGRESQL_VOLUME_CAPACITY}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: gogs
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${GOGS_VOLUME_CAPACITY}
          
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: gogs
    name: gogs
  spec:
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: gogs
      deploymentconfig: gogs
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
    creationTimestamp: null
    labels:
      app: gogs
      template: postgresql-persistent-template
    name: gogs-postgresql
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: gogs-postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: gogs
    name: gogs
  spec:
    port:
      targetPort: 3000-tcp
    to:
      kind: Service
      name: gogs
      weight: 100
    wildcardPolicy: None
parameters:
- description: Volume space available for postgresql, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: POSTGRESQL_VOLUME_CAPACITY
  required: true
  value: 5Gi
- description: Volume space available for gogs, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: GOGS_VOLUME_CAPACITY
  required: true
  value: 5Gi
- description: Postgesql user name
  displayName: Postgesql user name
  name: POSTGRESQL_USERNAME
  required: true
  value: user
- description: Postgesql password
  displayName: Postgesql password
  name: POSTGRESQL_PASSWORD
  required: true
  value: Test123456
- description: Postgesql database
  displayName: Postgesql database
  name: POSTGRESQL_DATABASE
  required: true
  value: gogs